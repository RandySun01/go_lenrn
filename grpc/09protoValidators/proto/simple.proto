syntax = "proto3";// 协议为proto3

//option go_package = "path;name";
//path 表示生成的go文件的存放地址，会自动生成目录的。
//name 表示生成的go文件所属的包名

//option go_package = "./;/tutorial"; // 官方不建议这样操作
//    protoc -I G:\goproject\src -I ./ --go_out=plugins=grpc:. ./test.proto
//    https://www.cnblogs.com/yisany/p/14875488.html
//    protoc -I G:\goproject\src   -I ./ --grpc-gateway_out=logtostderr=true:. .\proto\test.proto
//    protoc --proto_path=%GOPATH%/src --proto_path=%GOPATH%/src/github.com/google/protobuf/src --proto_path=. --govalidators_out=. --go_out=plugins=grpc:. ./simple.proto
//    protoc --govalidators_out=. --go_out=plugins=grpc:./ ./simple.proto
option go_package = "./;proto";
package proto;
import "validator.proto";

message InnerMessage {
  // some_integer can only be in range (1, 100).
  int32 some_integer = 1 [(validator.field) = {int_gt: 0, int_lt: 100}];
  // some_float can only be in range (0;1).
  double some_float = 2 [(validator.field) = {float_gte: 0, float_lte: 1}];
}

message OuterMessage {
  // important_string must be a lowercase alpha-numeric of 5 to 30 characters (RE2 syntax).
  string important_string = 1 [(validator.field) = {regex: "^[a-z]{2,5}$"}];
  // proto3 doesn't have `required`, the `msg_exist` enforces presence of InnerMessage.
  InnerMessage inner = 2 [(validator.field) = {msg_exists : true}];
}

service Simple{
  rpc Route (InnerMessage) returns (OuterMessage){};
}